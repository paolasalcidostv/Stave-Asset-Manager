<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rectangle_menu_item">
    <sp_rectangle_menu_item action="INSERT_OR_UPDATE">
        <active>true</active>
        <color>default</color>
        <condition>gs.isLoggedIn()</condition>
        <display_1/>
        <display_2/>
        <display_date>work_end</display_date>
        <filter/>
        <glyph/>
        <hint/>
        <kb_article/>
        <kb_category/>
        <kb_topic/>
        <label>Requests</label>
        <order>100</order>
        <record_script><![CDATA[// maximum number of entries in this Menu
var max = 30;

var t = data;  // shortcut
t.items = [];

var u = gs.getUser().getID();

// use record watchers to tell header when to update dropdown counts
t.record_watchers = [];
t.record_watchers.push({'table':'x_stave_fm_wo','filter':'active=true^caller=' + u});
t.record_watchers.push({'table':'sc_request','filter':'active=true^requested_for=' + u});

var st = new GlideRecord('x_stave_fm_wo');
if (st.isValid()) {
  st.addActiveQuery();
  st.addQuery('caller', gs.getUserID());
  st.orderByDesc('sys_updated_on');
  st.setLimit(max);
  st.query();
  while (st.next()) {
    var a = {};
    $sp.getRecordValues(a, st, 'short_description,sys_id,number,sys_updated_on');
    if (st.short_description.nil())
      a.short_description = "(No description)";
    a.__table = st.getTableName();
    a.type = 'record';
    a.sortOrder = st.getValue('sys_updated_on');
    t.items.push(a);
  }
}



var z = new GlideRecord('sc_request');
z.addActiveQuery();
z.addQuery('requested_for', gs.getUserID());
z.orderByDesc('sys_updated_on');
z.setLimit(max);
z.query();
while (z.next()) {
  var ritm = new GlideRecord('sc_req_item');
  ritm.addQuery('request', z.getUniqueValue());
  ritm.query();
  if (!ritm.next())
    continue;

  var a = {};
  $sp.getRecordValues(a, z, 'sys_id,number,sys_updated_on');
  if (ritm.hasNext())
    a.short_description = ritm.getRowCount() + ' requested items';
  else
    a.short_description = ritm.cat_item.getDisplayValue() || ritm.getDisplayValue("short_description");
  a.__table = z.getTableName();
  a.type = 'request';
  a.sortOrder = z.getValue('sys_updated_on');
  t.items.push(a);
}

t.items.sort(function(a, b) {
  return b.sortOrder - a.sortOrder;
});
t.items = t.items.slice(0, max); // only want first 30
t.count = t.items.length;

var link = {title: gs.getMessage('View all requests'), type: 'link', href: '?id=my_work_orders', items: []};
t.items.unshift(link); // put 'View all requests' first]]></record_script>
        <sc_cat_item/>
        <sc_category/>
        <short_description/>
        <sp_page/>
        <sp_rectangle_menu display_value="AssetPath Header Menu">7acae9e8dbf12010e2620181ca96199a</sp_rectangle_menu>
        <sp_rectangle_menu_item/>
        <sys_class_name>sp_rectangle_menu_item</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-01-16 00:14:11</sys_created_on>
        <sys_id>f6cae9e8dbf12010e2620181ca96199e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Requests</sys_name>
        <sys_package display_value="Stave Asset Manager" source="x_stave_am">53f715ecdbf568d0f24c5e25ca9619b7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Stave Asset Manager">53f715ecdbf568d0f24c5e25ca9619b7</sys_scope>
        <sys_update_name>sp_rectangle_menu_item_f6cae9e8dbf12010e2620181ca96199e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-01-16 00:14:11</sys_updated_on>
        <table>x_stave_fm_work_order</table>
        <type>scripted</type>
        <url/>
        <url_target/>
    </sp_rectangle_menu_item>
    <sys_translated_text action="delete_multiple" query="documentkey=f6cae9e8dbf12010e2620181ca96199e"/>
</record_update>
