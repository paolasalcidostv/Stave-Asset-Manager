<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil, $rootScope, spModal) {  
	/* widget controller */  
	var c = this;
	var today = new Date();
	today.setHours(0,0,0,0);
	
	var now = new Date();
	$scope.now = now;

	c.data.loading = true;
	c.timePeriod = c.options.default_range;
	c.timeRange = {
		start: today,
		end: now
	};

	function processStyle() {
		if(c.data.conditional_style)
		{
			c.data.color = "info"
			if(c.data.count >= c.data.danger_target){
				c.data.color = "danger"
			}
			else if(c.data.count >= c.data.warning_target){
				c.data.color = "warning"
			}
			else if(c.data.count >= c.data.success_target){
				c.data.color = "success"
			}
		}
		
		getIds();
	}
	
	function getIds(){
		c.server.get({ 
			query: c.data.query, 
			getIds: true, 
			table: c.data.table
		})
		.then(function(r){
			c.queryIds = r.data.queryIds;
		});
	}

	c.loadRecords = loadRecords;
	function loadRecords(ids) {
		ids = ids || [];
		var input = {
			table: c.data.table,
			filter: 'sys_idIN'+ids.join(),
			page_id: c.data.page_id,
			isModal: true
		};
	
		spModal.open({
			widget: '886cfaee1bd11090f290997fbd4bcb83',
			widgetInput: input,
			buttons: [],
			size: 'lg',
			footerStyle: {"display":"none"},
			headerStyle: {"display":"none"}
		}).then(function() {});
	}
	
	c.periodChange = periodChange;
	function periodChange() {
		var rangePeriod = {
			end: c.timeRange.end
		};

		switch(c.timePeriod)
		{
			case 'Week':
				rangePeriod.start = moment().subtract(1, 'week');
				break;
			case 'Month':
				rangePeriod.start = moment().subtract(1, 'month');
				break;
			case 'Quarter':
				rangePeriod.start = moment().subtract(1, 'quarter');
				break;
			case 'Year':
				rangePeriod.start = moment().subtract(1, 'year').toDate();
				break;
			case 'Today':
				rangePeriod.start = moment(c.timeRange.start);
				break;
			default:
				rangePeriod.start = moment(c.timeRange.start);
				break;
		}

		if (c.timePeriod)
		{
			c.data.rangeFilter = {};
			c.data.rangeFilter.start = dateToSnowFormat(c.timePeriod != 'Year' ? rangePeriod.start.startOf('day').toDate() : rangePeriod.start);
			c.data.rangeFilter.end = dateToSnowFormat(rangePeriod.end);		
		}
		else
		{
			delete c.data.rangeFilter;
		}

		c.server.update().then(function(){
			c.data.loading = false;
			processStyle();
		});
	}

	function dateToSnowFormat(date){
		var snowFormat = date.toISOString();
		snowFormat = snowFormat.replace('T', ' ');
		snowFormat = snowFormat.replace(/(\.\d+Z+)/, '');

		return snowFormat;
	}

	spUtil.recordWatch($scope, c.data.table, c.data.query, function(name, data) {
		periodChange()
	});

	$rootScope.$on('x_stave_sc.periodChange',function(e, params) {
		c.timePeriod = params.timePeriod;
		c.timeRange.start = params.start;
		c.timeRange.end = params.end;
		periodChange()
	});


	periodChange();

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.time-controls {
  	display: flex;
    align-items: center;
    margin: 5px;
  	justify-content: center;
}

.bg-gradient-x-success {
  background-image: -webkit-gradient(linear, left top, right top, from($brand-success), to(lighten($brand-success, 10%)));
  background-image: -webkit-linear-gradient(left, $brand-success 0%, lighten($brand-success, 10%) 100%);
  background-image: -moz-linear-gradient(left, $brand-success 0%, lighten($brand-success, 10%) 100%);
  background-image: -o-linear-gradient(left, $brand-success 0%, lighten($brand-success, 10%) 100%);
  background-image: linear-gradient(to right,$brand-success 0%, lighten($brand-success, 10%) 100%);
  background-repeat: repeat-x;
}

.bg-gradient-x-info {
  background-image: -webkit-gradient(linear, left top, right top, from($brand-info), to(lighten($brand-info, 10%)));
  background-image: -webkit-linear-gradient(left, $brand-info 0%, lighten($brand-info, 10%) 100%);
  background-image: -moz-linear-gradient(left, $brand-info 0%, lighten($brand-info, 10%) 100%);
  background-image: -o-linear-gradient(left, $brand-info 0%, lighten($brand-info, 10%) 100%);
  background-image: linear-gradient(to right,$brand-info 0%, lighten($brand-info, 10%) 100%);
  background-repeat: repeat-x;
}

.bg-gradient-x-danger {
  background-image: -webkit-gradient(linear, left top, right top, from($brand-danger), to(lighten($brand-danger, 10%)));
  background-image: -webkit-linear-gradient(left, $brand-danger 0%, lighten($brand-danger, 10%) 100%);
  background-image: -moz-linear-gradient(left, $brand-danger 0%, lighten($brand-danger, 10%) 100%);
  background-image: -o-linear-gradient(left, $brand-danger 0%, lighten($brand-danger, 10%) 100%);
  background-image: linear-gradient(to right,$brand-danger 0%, lighten($brand-danger, 10%) 100%);
  background-repeat: repeat-x;
}

.bg-gradient-x-warning {
  background-image: -webkit-gradient(linear, left top, right top, from($brand-warning), to(lighten($brand-warning, 10%)));
  background-image: -webkit-linear-gradient(left, $brand-warning 0%, lighten($brand-warning, 10%) 100%);
  background-image: -moz-linear-gradient(left, $brand-warning 0%, lighten($brand-warning, 10%) 100%);
  background-image: -o-linear-gradient(left, $brand-warning 0%, lighten($brand-warning, 10%) 100%);
  background-image: linear-gradient(to right,$brand-warning 0%, lighten($brand-warning, 10%) 100%);
  background-repeat: repeat-x;
}

.card-bg-default {
	background-color: white;
}

.card-bg-primary {
	background-color: #286090;
}

.card-bg-success {
	background-color: #449d44;
}

.card-bg-info {
	background-color: #31b0d5;
}

.card-bg-warning {
	background-color: #ec971f;
}

.card-bg-danger {
	background-color: #c9302c;
}

.progress-bar {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -moz-box-orient: vertical;
  -moz-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -moz-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #fff;
  text-align: center;
  white-space: nowrap;
  -webkit-transition: width 0.6s ease;
  -o-transition: width 0.6s ease;
  -moz-transition: width 0.6s ease;
  transition: width 0.6s ease;}

.progress.progress-sm {
  height: 0.5rem !important;}
.progress:last-child {
  margin-bottom: 1rem;}
.box-shadow-2 {
  -webkit-box-shadow: 0 10px 18px 0 rgba(62, 57, 107, 0.2);
  box-shadow: 0 10px 18px 0 rgba(62, 57, 107, 0.2);}
.progress {
  margin-bottom: 3rem;
}

.mt-1, .my-1 {
  margin-top: 2rem !important;
}

.mt-0 {
	margin-top: 0px !important;
}

.mr-10 {
	margin-right: 10px;
}

.mr-20 {
	margin-right: 20px;
}

.overflow-anywhere {
	overflow-wrap: anywhere;
}

.stv-flex {
	display: flex;
}

.mb-0, .my-0 {
  margin-bottom: 0 !important;
}

.progress {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  height: 1rem;
  overflow: hidden;
  font-size: 0.75rem;
  background-color: #EEE;
  border-radius: 0.25rem;
}

.fa-4x{
  font-size:3rem;
}

.card {
    -webkit-box-shadow: 0px 1px 15px 1px rgba(62, 57, 107, .07);
    box-shadow: 0px 1px 15px 1px rgba(62, 57, 107, .07);
}

.card-content {
    height: 100%;
}

a.pull-up {
  cursor:pointer;
}

.stop {
  animation:none;
  display:none;
}

.time-controls label {
    margin-left: 0.4rem;
}</css>
        <data_table>sp_instance_vlist</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,glyph,color,url,table,filter,roles</field_list>
        <has_preview>true</has_preview>
        <id>icon_with_count_2</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Icon With Count 2</name>
        <option_schema>[{"name":"count_type","section":"Data","label":"Count Type","type":"choice","choices":[{"label":"Count","value":"Count"},{"label":"Average","value":"Average"},{"label":"Sum","value":"Sum"},{"label":"Average Difference","value":"Average Difference"}]},{"name":"count_field","section":"Data","label":"Count Field","type":"field_name"},{"name":"count_style","section":"Presentation","label":"Count Style","type":"string"},{"name":"count_target","section":"Data","label":"Count Target","type":"string"},{"name":"url","section":"Behavior","label":"URL","type":"string"},{"name":"url_target","section":"Behavior","label":"URL Target","type":"string"},{"name":"conditional_style","section":"Presentation","default_value":"false","label":"Conditional Style","type":"boolean"},{"name":"success_target","section":"Presentation","default_value":"0","label":"Success Target","type":"integer"},{"hint":"","name":"warning_target","section":"Presentation","default_value":"50","label":"Warning Target","type":"integer"},{"name":"danger_target","section":"Presentation","default_value":"100","label":"Danger Target","type":"integer"},{"name":"id_field","section":"Data","label":"ID Field","type":"string"},{"name":"roles","section":"Behavior","label":"Roles","type":"string"},{"name":"average_to_substract","section":"Data","label":"Average to Substract","type":"field_name"},{"name":"prefix","section":"Presentation","label":"Prefix","type":"string"},{"name":"filter_by_range","section":"other","label":"Filter By Range","type":"boolean"},{"hint":"Default choice for the range control","name":"default_range","section":"other","label":"Default range","type":"choice","choices":[{"label":"Today","value":"Today"},{"label":"Week","value":"Week"},{"label":"Month","value":"Month"},{"label":"Quarter","value":"Quarter"},{"label":"Year","value":"Year"},{"label":"Range","value":"Range"}]},{"name":"is_clickable","section":"Behavior","default_value":"false","label":"Is Clickable","type":"boolean"},{"name":"background_color","section":"Presentation","label":"Background Color","type":"string"},{"name":"font_color","section":"Presentation","label":"Font Color","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	if(!input){
		// Card Style
		data.card_style = {};
		data.font_style = {};
		if (options.background_color) data.card_style['background-color'] = options.background_color;
		else data.color = options.color;
		if (options.font_color) data.font_style.color = options.font_color;
		else if (data.color && data.color !== 'default') data.font_style.color = 'white';
		// End Card Style
		data.page_id = options.sp_page ;
		data.count = 0;
		data.table = options.table||"incident";
		data.filter = options.filter||"active=true";
		data.count_type = options.count_type || '';
		data.count_field = options.count_field ||'';
		data.count_style = options.count_style ||'';
		data.count_target = options.count_target ||'';
		data.show_progress = false;
		data.url = options.url ||'';
		data.url_target = options.url_target||'';
		data.conditional_style = options.conditional_style=="true"?true:false;
		data.success_target = options.success_target;
		data.warning_target = options.warning_target;
		data.danger_target = options.danger_target;
		data.id_field = options.id_field||''
		data.sys_id = $sp.getParameter('sys_id');
		data.break_loop = false
	} else {
		if(input.getIds){
			var gr = new GlideRecord(input.table);
			gr.addEncodedQuery(input.query);
			
			gr.query();
			
			var ids = [];
			while(gr.next()){
				ids.push(gr.sys_id + '');
			}
			
			data.queryIds = ids;
			return;
		}
		
		var count = new GlideAggregate(input.table);
		count.addEncodedQuery(input.filter);

		if(input.rangeFilter){
			count.addQuery('sys_created_on', '>=', input.rangeFilter.start);
			count.addQuery('sys_created_on', '<=', input.rangeFilter.end);
		}

		if(input.id_field!=''){
			count.addQuery(input.id_field,input.sys_id);
		}
		
		count.setGroup(false);
		if(input.count_type == 'Count'){
			count.addAggregate('COUNT');	
		}
		
		if(input.count_type == 'Average' || input.count_type == 'Average Difference'){
			count.addAggregate('AVG',input.count_field);	
		}
		
		if(input.count_type == 'Sum'){
			count.addAggregate('Sum',input.count_field);	
		}

		data.query = count.getEncodedQuery();
		
		count.query();
		data.debug_msg =1;
		while (count.next())
		{
			if(input.count_type == 'Count')
			{
				data.count = count.getAggregate('COUNT');
			}
			if(input.count_type == 'Average')
			{
				data.count = count.getAggregate('AVG',input.count_field);

			}
			if(input.count_type == 'Sum')
			{
				data.count = count.getAggregate('SUM',input.count_field);
			}
			if(input.count_type == 'Average Difference')
			{
				var startValue = count.getAggregate('AVG',input.count_field);
				var countToSubstract = new GlideAggregate(input.table);
				countToSubstract.addEncodedQuery(input.filter);
				countToSubstract.addAggregate('AVG', options.average_to_substract);
				countToSubstract.query();
				if(countToSubstract.next())
				{
					var endValue = countToSubstract.getAggregate('AVG', options.average_to_substract);

					if(startValue && endValue && GlideDateTime(startValue) && GlideDateTime(endValue))
					{
						var start = new GlideDateTime(startValue);
						var end = new GlideDateTime(endValue);
						data.count = GlideDateTime.subtract(start, end).getDisplayValue();
					}
					else 
					{
						data.count = 0;
					}
				}
			}
			if(input.count =='')
			{
				input.count=0;
			}
		}

		if(input.count_target!='')
		{
			data.show_progress =false;
			data.percentage = data.count/input.count_target*100;
			if(data.percentage >=100){
				data.percentage=100;
			}
		}

	}

	options.title = gs.getMessage(options.title);

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>jason.garcia</sys_created_by>
        <sys_created_on>2021-03-03 19:40:21</sys_created_on>
        <sys_id>e5dea66f1b6ee49067a4a8e82d4bcbb1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Icon With Count 2</sys_name>
        <sys_package display_value="Stave Asset Manager" source="x_stave_am">53f715ecdbf568d0f24c5e25ca9619b7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Stave Asset Manager">53f715ecdbf568d0f24c5e25ca9619b7</sys_scope>
        <sys_update_name>sp_widget_e5dea66f1b6ee49067a4a8e82d4bcbb1</sys_update_name>
        <sys_updated_by>jason.garcia</sys_updated_by>
        <sys_updated_on>2021-03-03 19:40:21</sys_updated_on>
        <template><![CDATA[<a class="card" ng-href="{{::data.url}}" target="{{::data.url_target}}" ng-class="{'pull-up':data.url!=''}">
  <div class="card-content {{ data.color ? 'card-bg-' + data.color : '' }}" ng-style="data.card_style">
    <div class="card-body" optional-click-action="c.loadRecords(c.queryIds)" optional-click="{{::c.options.is_clickable}}">
      <i ng-if="c.data.loading" ng-class="{ 'stop': !c.data.loading}"  class="fa fa-spinner fa-spin fa-2x fa-fw"></i>

      <div class="stv-flex" ng-show="!c.data.loading">
        
        <div ng-if="data.count_type != '' && options.glyph">
          <h3 ng-style="data.font_style" class="nopadding mt-0 mr-20">
            <span class="fa fa-{{::options.glyph}} fa-4x info font-large-2 float-right"></span>
          </h3>
        </div>
        <div ng-if="data.count_type == ''">
          <span ng-style="data.font_style" class="fa fa-{{::c.options.glyph}} fa-4x info font-large-2 float-right"></span>
        </div>
        
        <div class="overflow-anywhere">
          <h4 class="mt-0" ng-style="data.font_style">{{::c.options.title}}</h4>
          <h3 class="mt-0" ng-style="data.font_style" ng-if="data.count_type!='' && c.options.prefix">
            {{c.options.prefix}}{{c.data.count | number: 2}}
          </h3>
          <h3 class="mt-0" ng-style="data.font_style" ng-if="data.count_type!='' && !c.options.prefix">
            {{c.data.count}}
          </h3>
        </div>
        
      </div>

    </div>
    
    <div class="progress progress-sm mt-1 mb-0 box-shadow-2" ng-if="data.show_progress">
      <div class="progress-bar bg-{{::data.color}} bg-gradient-x-{{c.data.color}}" role="progressbar" style="width:{{data.percentage}}%;" aria-valuenow="data.percentage" aria-valuemin="0" aria-valuemax="100"></div>
    </div>
  </div>
</a>
<stave-debug/>
]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Stave Asset Manager">53f715ecdbf568d0f24c5e25ca9619b7</application>
        <file_path/>
        <instance_id>79f1e71bdbd0ef04b2e05d00cf961953</instance_id>
        <instance_name>ven02656</instance_name>
        <name>sp_widget_e5dea66f1b6ee49067a4a8e82d4bcbb1</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, spUtil, $rootScope, spModal) {  
	/* widget controller */  
	var c = this;
	var today = new Date();
	today.setHours(0,0,0,0);
	
	var now = new Date();
	$scope.now = now;

	c.data.loading = true;
	c.timePeriod = c.options.default_range;
	c.timeRange = {
		start: today,
		end: now
	};

	function processStyle() {
		if(c.data.conditional_style)
		{
			c.data.color = "info"
			if(c.data.count &gt;= c.data.danger_target){
				c.data.color = "danger"
			}
			else if(c.data.count &gt;= c.data.warning_target){
				c.data.color = "warning"
			}
			else if(c.data.count &gt;= c.data.success_target){
				c.data.color = "success"
			}
		}
		
		getIds();
	}
	
	function getIds(){
		c.server.get({ 
			query: c.data.query, 
			getIds: true, 
			table: c.data.table
		})
		.then(function(r){
			c.queryIds = r.data.queryIds;
		});
	}

	c.loadRecords = loadRecords;
	function loadRecords(ids) {
		ids = ids || [];
		var input = {
			table: c.data.table,
			filter: 'sys_idIN'+ids.join(),
			page_id: c.data.page_id,
			isModal: true
		};
	
		spModal.open({
			widget: '886cfaee1bd11090f290997fbd4bcb83',
			widgetInput: input,
			buttons: [],
			size: 'lg',
			footerStyle: {"display":"none"},
			headerStyle: {"display":"none"}
		}).then(function() {});
	}
	
	c.periodChange = periodChange;
	function periodChange() {
		var rangePeriod = {
			end: c.timeRange.end
		};

		switch(c.timePeriod)
		{
			case 'Week':
				rangePeriod.start = moment().subtract(1, 'week');
				break;
			case 'Month':
				rangePeriod.start = moment().subtract(1, 'month');
				break;
			case 'Quarter':
				rangePeriod.start = moment().subtract(1, 'quarter');
				break;
			case 'Year':
				rangePeriod.start = moment().subtract(1, 'year').toDate();
				break;
			case 'Today':
				rangePeriod.start = moment(c.timeRange.start);
				break;
			default:
				rangePeriod.start = moment(c.timeRange.start);
				break;
		}

		if (c.timePeriod)
		{
			c.data.rangeFilter = {};
			c.data.rangeFilter.start = dateToSnowFormat(c.timePeriod != 'Year' ? rangePeriod.start.startOf('day').toDate() : rangePeriod.start);
			c.data.rangeFilter.end = dateToSnowFormat(rangePeriod.end);		
		}
		else
		{
			delete c.data.rangeFilter;
		}

		c.server.update().then(function(){
			c.data.loading = false;
			processStyle();
		});
	}

	function dateToSnowFormat(date){
		var snowFormat = date.toISOString();
		snowFormat = snowFormat.replace('T', ' ');
		snowFormat = snowFormat.replace(/(\.\d+Z+)/, '');

		return snowFormat;
	}

	spUtil.recordWatch($scope, c.data.table, c.data.query, function(name, data) {
		periodChange()
	});

	$rootScope.$on('x_stave_sc.periodChange',function(e, params) {
		c.timePeriod = params.timePeriod;
		c.timeRange.start = params.start;
		c.timeRange.end = params.end;
		periodChange()
	});


	periodChange();

}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.time-controls {
  	display: flex;
    align-items: center;
    margin: 5px;
  	justify-content: center;
}

.bg-gradient-x-success {
  background-image: -webkit-gradient(linear, left top, right top, from($brand-success), to(lighten($brand-success, 10%)));
  background-image: -webkit-linear-gradient(left, $brand-success 0%, lighten($brand-success, 10%) 100%);
  background-image: -moz-linear-gradient(left, $brand-success 0%, lighten($brand-success, 10%) 100%);
  background-image: -o-linear-gradient(left, $brand-success 0%, lighten($brand-success, 10%) 100%);
  background-image: linear-gradient(to right,$brand-success 0%, lighten($brand-success, 10%) 100%);
  background-repeat: repeat-x;
}

.bg-gradient-x-info {
  background-image: -webkit-gradient(linear, left top, right top, from($brand-info), to(lighten($brand-info, 10%)));
  background-image: -webkit-linear-gradient(left, $brand-info 0%, lighten($brand-info, 10%) 100%);
  background-image: -moz-linear-gradient(left, $brand-info 0%, lighten($brand-info, 10%) 100%);
  background-image: -o-linear-gradient(left, $brand-info 0%, lighten($brand-info, 10%) 100%);
  background-image: linear-gradient(to right,$brand-info 0%, lighten($brand-info, 10%) 100%);
  background-repeat: repeat-x;
}

.bg-gradient-x-danger {
  background-image: -webkit-gradient(linear, left top, right top, from($brand-danger), to(lighten($brand-danger, 10%)));
  background-image: -webkit-linear-gradient(left, $brand-danger 0%, lighten($brand-danger, 10%) 100%);
  background-image: -moz-linear-gradient(left, $brand-danger 0%, lighten($brand-danger, 10%) 100%);
  background-image: -o-linear-gradient(left, $brand-danger 0%, lighten($brand-danger, 10%) 100%);
  background-image: linear-gradient(to right,$brand-danger 0%, lighten($brand-danger, 10%) 100%);
  background-repeat: repeat-x;
}

.bg-gradient-x-warning {
  background-image: -webkit-gradient(linear, left top, right top, from($brand-warning), to(lighten($brand-warning, 10%)));
  background-image: -webkit-linear-gradient(left, $brand-warning 0%, lighten($brand-warning, 10%) 100%);
  background-image: -moz-linear-gradient(left, $brand-warning 0%, lighten($brand-warning, 10%) 100%);
  background-image: -o-linear-gradient(left, $brand-warning 0%, lighten($brand-warning, 10%) 100%);
  background-image: linear-gradient(to right,$brand-warning 0%, lighten($brand-warning, 10%) 100%);
  background-repeat: repeat-x;
}

.card-bg-default {
	background-color: white;
}

.card-bg-primary {
	background-color: #286090;
}

.card-bg-success {
	background-color: #449d44;
}

.card-bg-info {
	background-color: #31b0d5;
}

.card-bg-warning {
	background-color: #ec971f;
}

.card-bg-danger {
	background-color: #c9302c;
}

.progress-bar {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -moz-box-orient: vertical;
  -moz-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -moz-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #fff;
  text-align: center;
  white-space: nowrap;
  -webkit-transition: width 0.6s ease;
  -o-transition: width 0.6s ease;
  -moz-transition: width 0.6s ease;
  transition: width 0.6s ease;}

.progress.progress-sm {
  height: 0.5rem !important;}
.progress:last-child {
  margin-bottom: 1rem;}
.box-shadow-2 {
  -webkit-box-shadow: 0 10px 18px 0 rgba(62, 57, 107, 0.2);
  box-shadow: 0 10px 18px 0 rgba(62, 57, 107, 0.2);}
.progress {
  margin-bottom: 3rem;
}

.mt-1, .my-1 {
  margin-top: 2rem !important;
}

.mt-0 {
	margin-top: 0px !important;
}

.mr-10 {
	margin-right: 10px;
}

.mr-20 {
	margin-right: 20px;
}

.overflow-anywhere {
	overflow-wrap: anywhere;
}

.stv-flex {
	display: flex;
}

.mb-0, .my-0 {
  margin-bottom: 0 !important;
}

.progress {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  height: 1rem;
  overflow: hidden;
  font-size: 0.75rem;
  background-color: #EEE;
  border-radius: 0.25rem;
}

.fa-4x{
  font-size:3rem;
}

.card {
    -webkit-box-shadow: 0px 1px 15px 1px rgba(62, 57, 107, .07);
    box-shadow: 0px 1px 15px 1px rgba(62, 57, 107, .07);
}

.card-content {
    height: 100%;
}

a.pull-up {
  cursor:pointer;
}

.stop {
  animation:none;
  display:none;
}

.time-controls label {
    margin-left: 0.4rem;
}&lt;/css&gt;&lt;data_table&gt;sp_instance_vlist&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;title,glyph,color,url,table,filter,roles&lt;/field_list&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;icon_with_count_2&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;Icon With Count 2&lt;/name&gt;&lt;option_schema&gt;[{"name":"count_type","section":"Data","label":"Count Type","type":"choice","choices":[{"label":"Count","value":"Count"},{"label":"Average","value":"Average"},{"label":"Sum","value":"Sum"},{"label":"Average Difference","value":"Average Difference"}]},{"name":"count_field","section":"Data","label":"Count Field","type":"field_name"},{"name":"count_style","section":"Presentation","label":"Count Style","type":"string"},{"name":"count_target","section":"Data","label":"Count Target","type":"string"},{"name":"url","section":"Behavior","label":"URL","type":"string"},{"name":"url_target","section":"Behavior","label":"URL Target","type":"string"},{"name":"conditional_style","section":"Presentation","default_value":"false","label":"Conditional Style","type":"boolean"},{"name":"success_target","section":"Presentation","default_value":"0","label":"Success Target","type":"integer"},{"hint":"","name":"warning_target","section":"Presentation","default_value":"50","label":"Warning Target","type":"integer"},{"name":"danger_target","section":"Presentation","default_value":"100","label":"Danger Target","type":"integer"},{"name":"id_field","section":"Data","label":"ID Field","type":"string"},{"name":"roles","section":"Behavior","label":"Roles","type":"string"},{"name":"average_to_substract","section":"Data","label":"Average to Substract","type":"field_name"},{"name":"prefix","section":"Presentation","label":"Prefix","type":"string"},{"name":"filter_by_range","section":"other","label":"Filter By Range","type":"boolean"},{"hint":"Default choice for the range control","name":"default_range","section":"other","label":"Default range","type":"choice","choices":[{"label":"Today","value":"Today"},{"label":"Week","value":"Week"},{"label":"Month","value":"Month"},{"label":"Quarter","value":"Quarter"},{"label":"Year","value":"Year"},{"label":"Range","value":"Range"}]},{"name":"is_clickable","section":"Behavior","default_value":"false","label":"Is Clickable","type":"boolean"},{"name":"background_color","section":"Presentation","label":"Background Color","type":"string"},{"name":"font_color","section":"Presentation","label":"Font Color","type":"string"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	if(!input){
		// Card Style
		data.card_style = {};
		data.font_style = {};
		if (options.background_color) data.card_style['background-color'] = options.background_color;
		else data.color = options.color;
		if (options.font_color) data.font_style.color = options.font_color;
		else if (data.color &amp;&amp; data.color !== 'default') data.font_style.color = 'white';
		// End Card Style
		data.page_id = options.sp_page ;
		data.count = 0;
		data.table = options.table||"incident";
		data.filter = options.filter||"active=true";
		data.count_type = options.count_type || '';
		data.count_field = options.count_field ||'';
		data.count_style = options.count_style ||'';
		data.count_target = options.count_target ||'';
		data.show_progress = false;
		data.url = options.url ||'';
		data.url_target = options.url_target||'';
		data.conditional_style = options.conditional_style=="true"?true:false;
		data.success_target = options.success_target;
		data.warning_target = options.warning_target;
		data.danger_target = options.danger_target;
		data.id_field = options.id_field||''
		data.sys_id = $sp.getParameter('sys_id');
		data.break_loop = false
	} else {
		if(input.getIds){
			var gr = new GlideRecord(input.table);
			gr.addEncodedQuery(input.query);
			
			gr.query();
			
			var ids = [];
			while(gr.next()){
				ids.push(gr.sys_id + '');
			}
			
			data.queryIds = ids;
			return;
		}
		
		var count = new GlideAggregate(input.table);
		count.addEncodedQuery(input.filter);

		if(input.rangeFilter){
			count.addQuery('sys_created_on', '&gt;=', input.rangeFilter.start);
			count.addQuery('sys_created_on', '&lt;=', input.rangeFilter.end);
		}

		if(input.id_field!=''){
			count.addQuery(input.id_field,input.sys_id);
		}
		
		count.setGroup(false);
		if(input.count_type == 'Count'){
			count.addAggregate('COUNT');	
		}
		
		if(input.count_type == 'Average' || input.count_type == 'Average Difference'){
			count.addAggregate('AVG',input.count_field);	
		}
		
		if(input.count_type == 'Sum'){
			count.addAggregate('Sum',input.count_field);	
		}

		data.query = count.getEncodedQuery();
		
		count.query();
		data.debug_msg =1;
		while (count.next())
		{
			if(input.count_type == 'Count')
			{
				data.count = count.getAggregate('COUNT');
			}
			if(input.count_type == 'Average')
			{
				data.count = count.getAggregate('AVG',input.count_field);

			}
			if(input.count_type == 'Sum')
			{
				data.count = count.getAggregate('SUM',input.count_field);
			}
			if(input.count_type == 'Average Difference')
			{
				var startValue = count.getAggregate('AVG',input.count_field);
				var countToSubstract = new GlideAggregate(input.table);
				countToSubstract.addEncodedQuery(input.filter);
				countToSubstract.addAggregate('AVG', options.average_to_substract);
				countToSubstract.query();
				if(countToSubstract.next())
				{
					var endValue = countToSubstract.getAggregate('AVG', options.average_to_substract);

					if(startValue &amp;&amp; endValue &amp;&amp; GlideDateTime(startValue) &amp;&amp; GlideDateTime(endValue))
					{
						var start = new GlideDateTime(startValue);
						var end = new GlideDateTime(endValue);
						data.count = GlideDateTime.subtract(start, end).getDisplayValue();
					}
					else 
					{
						data.count = 0;
					}
				}
			}
			if(input.count =='')
			{
				input.count=0;
			}
		}

		if(input.count_target!='')
		{
			data.show_progress =false;
			data.percentage = data.count/input.count_target*100;
			if(data.percentage &gt;=100){
				data.percentage=100;
			}
		}

	}

	options.title = gs.getMessage(options.title);

})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;jason.garcia&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-03 19:40:21&lt;/sys_created_on&gt;&lt;sys_id&gt;e5dea66f1b6ee49067a4a8e82d4bcbb1&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Icon With Count 2&lt;/sys_name&gt;&lt;sys_package display_value="Stave Asset Manager" source="x_stave_am"&gt;53f715ecdbf568d0f24c5e25ca9619b7&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Stave Asset Manager"&gt;53f715ecdbf568d0f24c5e25ca9619b7&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_e5dea66f1b6ee49067a4a8e82d4bcbb1&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;jason.garcia&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-03 19:40:21&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;a class="card" ng-href="{{::data.url}}" target="{{::data.url_target}}" ng-class="{'pull-up':data.url!=''}"&gt;
  &lt;div class="card-content {{ data.color ? 'card-bg-' + data.color : '' }}" ng-style="data.card_style"&gt;
    &lt;div class="card-body" optional-click-action="c.loadRecords(c.queryIds)" optional-click="{{::c.options.is_clickable}}"&gt;
      &lt;i ng-if="c.data.loading" ng-class="{ 'stop': !c.data.loading}"  class="fa fa-spinner fa-spin fa-2x fa-fw"&gt;&lt;/i&gt;

      &lt;div class="stv-flex" ng-show="!c.data.loading"&gt;
        
        &lt;div ng-if="data.count_type != '' &amp;&amp; options.glyph"&gt;
          &lt;h3 ng-style="data.font_style" class="nopadding mt-0 mr-20"&gt;
            &lt;span class="fa fa-{{::options.glyph}} fa-4x info font-large-2 float-right"&gt;&lt;/span&gt;
          &lt;/h3&gt;
        &lt;/div&gt;
        &lt;div ng-if="data.count_type == ''"&gt;
          &lt;span ng-style="data.font_style" class="fa fa-{{::c.options.glyph}} fa-4x info font-large-2 float-right"&gt;&lt;/span&gt;
        &lt;/div&gt;
        
        &lt;div class="overflow-anywhere"&gt;
          &lt;h4 class="mt-0" ng-style="data.font_style"&gt;{{::c.options.title}}&lt;/h4&gt;
          &lt;h3 class="mt-0" ng-style="data.font_style" ng-if="data.count_type!='' &amp;&amp; c.options.prefix"&gt;
            {{c.options.prefix}}{{c.data.count | number: 2}}
          &lt;/h3&gt;
          &lt;h3 class="mt-0" ng-style="data.font_style" ng-if="data.count_type!='' &amp;&amp; !c.options.prefix"&gt;
            {{c.data.count}}
          &lt;/h3&gt;
        &lt;/div&gt;
        
      &lt;/div&gt;

    &lt;/div&gt;
    
    &lt;div class="progress progress-sm mt-1 mb-0 box-shadow-2" ng-if="data.show_progress"&gt;
      &lt;div class="progress-bar bg-{{::data.color}} bg-gradient-x-{{c.data.color}}" role="progressbar" style="width:{{data.percentage}}%;" aria-valuenow="data.percentage" aria-valuemin="0" aria-valuemax="100"&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/a&gt;
&lt;stave-debug/&gt;
]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>905822949</payload_hash>
        <record_name>Icon With Count 2</record_name>
        <reverted_from/>
        <source>0db041b41b2a285067a4a8e82d4bcb54</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>jason.garcia</sys_created_by>
        <sys_created_on>2021-03-03 19:40:21</sys_created_on>
        <sys_id>e5dea66f1b6ee49067a4a8e82d4bcbb3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>177f99b00c40000001</sys_recorded_at>
        <sys_updated_by>jason.garcia</sys_updated_by>
        <sys_updated_on>2021-03-03 19:40:21</sys_updated_on>
        <type>Widget</type>
        <update_guid>eddea66f3a6ee490327a9d25825235b2</update_guid>
        <update_guid_history>eddea66f3a6ee490327a9d25825235b2:905822949</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="">451fee6f1b6ee49067a4a8e82d4bcbc0</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>jason.garcia</sys_created_by>
        <sys_created_on>2021-03-03 19:41:24</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>d4f23becc6254d20ae937634c14e9451</sys_id>
        <sys_metadata>e5dea66f1b6ee49067a4a8e82d4bcbb1</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Icon With Count 2</sys_name>
        <sys_package display_value="Stave Asset Manager" source="x_stave_am">53f715ecdbf568d0f24c5e25ca9619b7</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Stave Asset Manager">53f715ecdbf568d0f24c5e25ca9619b7</sys_scope>
        <sys_scope_delete display_value="">00a6ad4346cd431980274a62ff92a419</sys_scope_delete>
        <sys_update_name>sp_widget_e5dea66f1b6ee49067a4a8e82d4bcbb1</sys_update_name>
        <sys_update_version display_value="sp_widget_e5dea66f1b6ee49067a4a8e82d4bcbb1">e5dea66f1b6ee49067a4a8e82d4bcbb3</sys_update_version>
        <sys_updated_by>jason.garcia</sys_updated_by>
        <sys_updated_on>2021-03-03 19:41:24</sys_updated_on>
    </sys_metadata_delete>
</record_update>
